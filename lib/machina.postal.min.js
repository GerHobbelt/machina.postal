/*
 machina.postal
 Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT (http://www.opensource.org/licenses/mit-license) & GPL (http://www.opensource.org/licenses/gpl-license)
 Version 0.3.0
 */
(function(n,e){"object"==typeof module&&module.exports?module.exports=function(n,o){return e(n,o)}:"function"==typeof define&&define.amd?define(["machina","postal"],function(o,s){return e(o,s,n)}):e(n.machina,n.postal,n)})(this,function(n,e){var o=n.bus={channels:{},config:{handlerChannelSuffix:"",eventChannelSuffix:".events"},wireHandlersToBus:function(n,e){o.channels[e]._subscriptions.push(o.channels[e].subscribe("#",function(e,o){n.handle.call(n,o.topic,e,o)}))},wireEventsToBus:function(n,e){var s=o.channels[e].eventPublisher=function(){var n=Array.prototype.slice.call(arguments,0);n[0].toLowerCase();try{o.channels[e].publish(n[0],n[1])}catch(s){console&&console.log!==undefined&&console.log(""+s)}};n.on("*",s)},wireUp:function(n){var s=n.namespace+o.config.handlerChannelSuffix,a=n.namespace+o.config.eventChannelSuffix;o.channels[s]=e.channel(s),o.channels[a]=e.channel(a),o.channels[s]._subscriptions=[],o.wireHandlersToBus(n,s),o.wireEventsToBus(n,a)}};n.on("newfsm",o.wireUp)});
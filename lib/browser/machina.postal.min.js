/*
 machina.postal
 Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 License: Dual licensed MIT (http://www.opensource.org/licenses/mit-license) & GPL (http://www.opensource.org/licenses/gpl-license)
 Version 0.2.1
 */
(function(e,t,n){typeof define=="function"&&define.amd?define(["machina","postal"],function(r,i){return n(r,i,e,t)}):n(e.machina,e.postal,e,t)})(this,document,function(e,t,n,r,i){var s=e.bus={channels:{},config:{handlerChannelSuffix:"",eventChannelSuffix:".events"},wireHandlersToBus:function(e,t){s.channels[t]._subscriptions.push(s.channels[t].subscribe("#",function(t,n){e.handle.call(e,n.topic,t,n)}))},wireEventsToBus:function(e,t){var n=s.channels[t].eventPublisher=function(){var e=Array.prototype.slice.call(arguments,0);try{var n=e[0]==="Transitioned"?{fromState:e[1],toState:e[2]}:e[1];s.channels[t].publish({topic:e[0],data:n||{}})}catch(r){console&&typeof console.log!="undefined"&&console.log(r.toString())}};e.on("*",n)},wireUp:function(e){var n=e.namespace+s.config.handlerChannelSuffix,r=e.namespace+s.config.eventChannelSuffix;s.channels[n]=t.channel({channel:n}),s.channels[r]=t.channel({channel:r}),s.channels[n]._subscriptions=[],s.wireHandlersToBus(e,n),s.wireEventsToBus(e,r)}};e.on("newFsm",s.wireUp)})